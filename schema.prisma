generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum PriorityTag {
    LOW
    MEDIUM
    HIGH
}

model Project {
    id              Int @id @default(autoincrement())
    name            String
    description     String
    organization    String
    owner           String
    lastUsed        DateTime?
    Tasks           Task[]
    Documents       Document[]
    TaskStatus      TaskStatus[]
}

model Task {
    id            Int  @id @default(autoincrement())
    title         String
    description   String
    due_date      DateTime?
    assigned_to   String?
    priority      PriorityTag @default(LOW)
    taskStatus    TaskStatus? @relation(fields: [taskStatusId], references: [id])
    taskStatusId  Int?
    project       Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId     Int 
    kanbanSort    Int? 
}

model TaskStatus {
    id              Int @id @default(autoincrement())
    label           String
    tasks           Task[]
    project         Project @ relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId       Int
    kanbanColSort   Int?
    @@unique([label, projectId])
}

model Document {
    id          Int @id @default(autoincrement())
    title       String
    contents    Json
    project     Project @relation(fields: [projectId], references: [id])
    projectId   Int
}





